{"ast":null,"code":"import _slicedToArray from\"/Users/seoyoung/2023-1-OSSProj-3PLUS-6/Project/react-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useDrag}from\"react-dnd\";import{getEmptyImage}from\"react-dnd-html5-backend\";import classNames from\"classnames\";import{useEffect,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var CourseRow=function CourseRow(props){var record=props.record,_onClick=props.onClick;var recordRef=useRef(record);// record를 참조하는 ref를 만듭니다.\nvar _useDrag=useDrag(function(){return{type:\"COURSE\",item:{course:recordRef.current},// 이제 여기서 current를 사용하여 항상 최신의 record를 참조합니다.\ncollect:function collect(monitor){return{isDragging:monitor.isDragging()};}};}),_useDrag2=_slicedToArray(_useDrag,2),isDragging=_useDrag2[0].isDragging,dragRef=_useDrag2[1];// useEffect(() => {\n//   recordRef.current = record; // record가 변경될 때마다 recordRef를 업데이트합니다.\n//   preview(getEmptyImage(), { captureDraggingState: true });\n// }, [record, preview]);\nvar rowClasses=classNames({dragging:isDragging});return/*#__PURE__*/_jsx(\"tr\",{ref:dragRef,className:rowClasses,onClick:function onClick(){return _onClick(record);},children:props.children});};export default CourseRow;","map":{"version":3,"names":["React","useDrag","getEmptyImage","classNames","useEffect","useRef","jsx","_jsx","CourseRow","props","record","onClick","recordRef","_useDrag","type","item","course","current","collect","monitor","isDragging","_useDrag2","_slicedToArray","dragRef","rowClasses","dragging","ref","className","children"],"sources":["/Users/seoyoung/2023-1-OSSProj-3PLUS-6/Project/react-web/src/components/CourseRow.js"],"sourcesContent":["import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport classNames from \"classnames\";\nimport { useEffect, useRef } from \"react\";\n\nconst CourseRow = (props) => {\n  const { record, onClick } = props;\n  const recordRef = useRef(record); // record를 참조하는 ref를 만듭니다.\n  const [{ isDragging }, dragRef] = useDrag(() => ({\n    type: \"COURSE\",\n    item: { course: recordRef.current }, // 이제 여기서 current를 사용하여 항상 최신의 record를 참조합니다.\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }));\n\n  // useEffect(() => {\n  //   recordRef.current = record; // record가 변경될 때마다 recordRef를 업데이트합니다.\n  //   preview(getEmptyImage(), { captureDraggingState: true });\n  // }, [record, preview]);\n\n  const rowClasses = classNames({\n    dragging: isDragging,\n  });\n\n  return (\n    <tr ref={dragRef} className={rowClasses} onClick={() => onClick(record)}>\n      {props.children}\n    </tr>\n  );\n};\n\nexport default CourseRow;\n"],"mappings":"8IAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,WAAW,CACnC,OAASC,aAAa,KAAQ,yBAAyB,CACvD,MAAO,CAAAC,UAAU,KAAM,YAAY,CACnC,OAASC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1C,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,KAAK,CAAK,CAC3B,GAAQ,CAAAC,MAAM,CAAcD,KAAK,CAAzBC,MAAM,CAAEC,QAAO,CAAKF,KAAK,CAAjBE,OAAO,CACvB,GAAM,CAAAC,SAAS,CAAGP,MAAM,CAACK,MAAM,CAAC,CAAE;AAClC,IAAAG,QAAA,CAAkCZ,OAAO,CAAC,iBAAO,CAC/Ca,IAAI,CAAE,QAAQ,CACdC,IAAI,CAAE,CAAEC,MAAM,CAAEJ,SAAS,CAACK,OAAQ,CAAC,CAAE;AACrCC,OAAO,CAAE,SAAAA,QAACC,OAAO,QAAM,CACrBC,UAAU,CAAED,OAAO,CAACC,UAAU,CAAC,CACjC,CAAC,EACH,CAAC,EAAC,CAAC,CAAAC,SAAA,CAAAC,cAAA,CAAAT,QAAA,IANMO,UAAU,CAAAC,SAAA,IAAVD,UAAU,CAAIG,OAAO,CAAAF,SAAA,IAQ9B;AACA;AACA;AACA;AAEA,GAAM,CAAAG,UAAU,CAAGrB,UAAU,CAAC,CAC5BsB,QAAQ,CAAEL,UACZ,CAAC,CAAC,CAEF,mBACEb,IAAA,OAAImB,GAAG,CAAEH,OAAQ,CAACI,SAAS,CAAEH,UAAW,CAACb,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAA,QAAO,CAACD,MAAM,CAAC,EAAC,CAAAkB,QAAA,CACrEnB,KAAK,CAACmB,QAAQ,CACb,CAAC,CAET,CAAC,CAED,cAAe,CAAApB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}