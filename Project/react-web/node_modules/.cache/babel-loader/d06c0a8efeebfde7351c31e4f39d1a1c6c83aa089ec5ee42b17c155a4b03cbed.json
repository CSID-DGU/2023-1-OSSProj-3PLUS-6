{"ast":null,"code":"import _defineProperty from \"/Users/seoyoung/2023-1-OSSProj-3PLUS-6/Project/react-web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/seoyoung/2023-1-OSSProj-3PLUS-6/Project/react-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport genPurePanel from '../_util/PurePanel';\nimport { ConfigContext } from '../config-provider/context';\nimport Popover from '../popover';\nimport theme from '../theme';\nimport ColorPickerPanel from './ColorPickerPanel';\nimport ColorTrigger from './components/ColorTrigger';\nimport useColorState from './hooks/useColorState';\nimport useStyle from './style/index';\nimport { customizePrefixCls, generateColor } from './util';\nvar ColorPicker = function ColorPicker(props) {\n  var value = props.value,\n    defaultValue = props.defaultValue,\n    format = props.format,\n    _props$allowClear = props.allowClear,\n    allowClear = _props$allowClear === void 0 ? false : _props$allowClear,\n    presets = props.presets,\n    children = props.children,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? 'click' : _props$trigger,\n    open = props.open,\n    disabled = props.disabled,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'bottomLeft' : _props$placement,\n    _props$arrow = props.arrow,\n    arrow = _props$arrow === void 0 ? true : _props$arrow,\n    style = props.style,\n    className = props.className,\n    rootClassName = props.rootClassName,\n    styles = props.styles,\n    onFormatChange = props.onFormatChange,\n    onChange = props.onChange,\n    onOpenChange = props.onOpenChange,\n    getPopupContainer = props.getPopupContainer,\n    _props$autoAdjustOver = props.autoAdjustOverflow,\n    autoAdjustOverflow = _props$autoAdjustOver === void 0 ? true : _props$autoAdjustOver;\n  var _useContext = useContext(ConfigContext),\n    getPrefixCls = _useContext.getPrefixCls,\n    direction = _useContext.direction;\n  var _theme$useToken = theme.useToken(),\n    token = _theme$useToken.token;\n  var _useColorState = useColorState(token.colorPrimary, {\n      value: value,\n      defaultValue: defaultValue\n    }),\n    _useColorState2 = _slicedToArray(_useColorState, 2),\n    colorValue = _useColorState2[0],\n    setColorValue = _useColorState2[1];\n  var _useMergedState = useMergedState(false, {\n      value: open,\n      postState: function postState(openData) {\n        return !disabled && openData;\n      },\n      onChange: onOpenChange\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    popupOpen = _useMergedState2[0],\n    setPopupOpen = _useMergedState2[1];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    colorCleared = _useState2[0],\n    setColorCleared = _useState2[1];\n  var prefixCls = getPrefixCls('color-picker', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var mergeRootCls = classNames(rootClassName, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction));\n  var mergeCls = classNames(mergeRootCls, className, hashId);\n  var handleChange = function handleChange(data, type) {\n    var color = generateColor(data);\n    if (colorCleared) {\n      setColorCleared(false);\n      var hsba = color.toHsb();\n      // ignore alpha slider\n      if (colorValue.toHsb().a === 0 && type !== 'alpha') {\n        hsba.a = 1;\n        color = generateColor(hsba);\n      }\n    }\n    if (!value) {\n      setColorValue(color);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(color, color.toHexString());\n  };\n  var handleClear = function handleClear(clear) {\n    setColorCleared(clear);\n  };\n  var popoverProps = {\n    open: popupOpen,\n    trigger: trigger,\n    placement: placement,\n    arrow: arrow,\n    rootClassName: rootClassName,\n    getPopupContainer: getPopupContainer,\n    autoAdjustOverflow: autoAdjustOverflow\n  };\n  var colorBaseProps = {\n    prefixCls: prefixCls,\n    color: colorValue,\n    allowClear: allowClear,\n    colorCleared: colorCleared,\n    disabled: disabled,\n    presets: presets,\n    format: format,\n    onFormatChange: onFormatChange\n  };\n  useEffect(function () {\n    if (colorCleared) {\n      setPopupOpen(false);\n    }\n  }, [colorCleared]);\n  return wrapSSR( /*#__PURE__*/React.createElement(Popover, Object.assign({\n    style: styles === null || styles === void 0 ? void 0 : styles.popup,\n    onOpenChange: setPopupOpen,\n    content: /*#__PURE__*/React.createElement(ColorPickerPanel, Object.assign({}, colorBaseProps, {\n      onChange: handleChange,\n      onClear: handleClear\n    })),\n    overlayClassName: prefixCls\n  }, popoverProps), children || /*#__PURE__*/React.createElement(ColorTrigger, {\n    open: popupOpen,\n    className: mergeCls,\n    style: style,\n    color: colorValue,\n    prefixCls: prefixCls,\n    disabled: disabled,\n    colorCleared: colorCleared\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\nvar PurePanel = genPurePanel(ColorPicker, 'color-picker', /* istanbul ignore next */\nfunction (prefixCls) {\n  return prefixCls;\n}, function (props) {\n  return Object.assign(Object.assign({}, props), {\n    placement: 'bottom',\n    autoAdjustOverflow: false\n  });\n});\nColorPicker._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default ColorPicker;","map":{"version":3,"names":["classNames","useMergedState","React","useContext","useEffect","useState","genPurePanel","ConfigContext","Popover","theme","ColorPickerPanel","ColorTrigger","useColorState","useStyle","customizePrefixCls","generateColor","ColorPicker","props","value","defaultValue","format","_props$allowClear","allowClear","presets","children","_props$trigger","trigger","open","disabled","_props$placement","placement","_props$arrow","arrow","style","className","rootClassName","styles","onFormatChange","onChange","onOpenChange","getPopupContainer","_props$autoAdjustOver","autoAdjustOverflow","_useContext","getPrefixCls","direction","_theme$useToken","useToken","token","_useColorState","colorPrimary","_useColorState2","_slicedToArray","colorValue","setColorValue","_useMergedState","postState","openData","_useMergedState2","popupOpen","setPopupOpen","_useState","_useState2","colorCleared","setColorCleared","prefixCls","_useStyle","_useStyle2","wrapSSR","hashId","mergeRootCls","_defineProperty","concat","mergeCls","handleChange","data","type","color","hsba","toHsb","a","toHexString","handleClear","clear","popoverProps","colorBaseProps","createElement","Object","assign","popup","content","onClear","overlayClassName","process","env","NODE_ENV","displayName","PurePanel","_InternalPanelDoNotUseOrYouWillBeFired"],"sources":["/Users/seoyoung/2023-1-OSSProj-3PLUS-6/Project/react-web/node_modules/antd/es/color-picker/ColorPicker.js"],"sourcesContent":["import classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport genPurePanel from '../_util/PurePanel';\nimport { ConfigContext } from '../config-provider/context';\nimport Popover from '../popover';\nimport theme from '../theme';\nimport ColorPickerPanel from './ColorPickerPanel';\nimport ColorTrigger from './components/ColorTrigger';\nimport useColorState from './hooks/useColorState';\nimport useStyle from './style/index';\nimport { customizePrefixCls, generateColor } from './util';\nconst ColorPicker = props => {\n  const {\n    value,\n    defaultValue,\n    format,\n    allowClear = false,\n    presets,\n    children,\n    trigger = 'click',\n    open,\n    disabled,\n    placement = 'bottomLeft',\n    arrow = true,\n    style,\n    className,\n    rootClassName,\n    styles,\n    onFormatChange,\n    onChange,\n    onOpenChange,\n    getPopupContainer,\n    autoAdjustOverflow = true\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const {\n    token\n  } = theme.useToken();\n  const [colorValue, setColorValue] = useColorState(token.colorPrimary, {\n    value,\n    defaultValue\n  });\n  const [popupOpen, setPopupOpen] = useMergedState(false, {\n    value: open,\n    postState: openData => !disabled && openData,\n    onChange: onOpenChange\n  });\n  const [colorCleared, setColorCleared] = useState(false);\n  const prefixCls = getPrefixCls('color-picker', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeRootCls = classNames(rootClassName, {\n    [`${prefixCls}-rtl`]: direction\n  });\n  const mergeCls = classNames(mergeRootCls, className, hashId);\n  const handleChange = (data, type) => {\n    let color = generateColor(data);\n    if (colorCleared) {\n      setColorCleared(false);\n      const hsba = color.toHsb();\n      // ignore alpha slider\n      if (colorValue.toHsb().a === 0 && type !== 'alpha') {\n        hsba.a = 1;\n        color = generateColor(hsba);\n      }\n    }\n    if (!value) {\n      setColorValue(color);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(color, color.toHexString());\n  };\n  const handleClear = clear => {\n    setColorCleared(clear);\n  };\n  const popoverProps = {\n    open: popupOpen,\n    trigger,\n    placement,\n    arrow,\n    rootClassName,\n    getPopupContainer,\n    autoAdjustOverflow\n  };\n  const colorBaseProps = {\n    prefixCls,\n    color: colorValue,\n    allowClear,\n    colorCleared,\n    disabled,\n    presets,\n    format,\n    onFormatChange\n  };\n  useEffect(() => {\n    if (colorCleared) {\n      setPopupOpen(false);\n    }\n  }, [colorCleared]);\n  return wrapSSR( /*#__PURE__*/React.createElement(Popover, Object.assign({\n    style: styles === null || styles === void 0 ? void 0 : styles.popup,\n    onOpenChange: setPopupOpen,\n    content: /*#__PURE__*/React.createElement(ColorPickerPanel, Object.assign({}, colorBaseProps, {\n      onChange: handleChange,\n      onClear: handleClear\n    })),\n    overlayClassName: prefixCls\n  }, popoverProps), children || /*#__PURE__*/React.createElement(ColorTrigger, {\n    open: popupOpen,\n    className: mergeCls,\n    style: style,\n    color: colorValue,\n    prefixCls: prefixCls,\n    disabled: disabled,\n    colorCleared: colorCleared\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPicker.displayName = 'ColorPicker';\n}\nconst PurePanel = genPurePanel(ColorPicker, 'color-picker', /* istanbul ignore next */\nprefixCls => prefixCls, props => Object.assign(Object.assign({}, props), {\n  placement: 'bottom',\n  autoAdjustOverflow: false\n}));\nColorPicker._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default ColorPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}